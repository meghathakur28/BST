class HelloWorld {
    static class Node{
        int data;
        Node left;
        Node right;
        Node(int data)
        {
            this.data=data;
            this.left=null;
            this.right=null;
        }
    }
    public static Node searchBST(Node root, int val) {
        if(root==null)
        {
            return null;
        }
        if(val<root.data)
        {
            return searchBST(root.left,val);
        }
        if(val>root.data)
        {
            return searchBST(root.right,val);
        }
        if(val==root.data)
        {
            return root;
        }
        return root;
    }
    public static Node BuildBST(int val,Node root)
    {
        if(root == null)
        {
            root = new Node(val);
        }
        if(val<root.data)
        {
            root.left=BuildBST(val,root.left);
        }
        if(val>root.data)
        {
            root.right=BuildBST(val,root.right);
        }
        return root;
    }
    public static void inorder(Node root)
    {
        if(root == null)
        {
            return;
        }
        inorder(root.left);
        System.out.print(root.data+" ");
        inorder(root.right);
    }
    public static void main(String[] args) {
        int[] val= {4,2,7,1,3};
        Node root = null;
        for(int i=0;i<val.length;i++)
        {
            root =BuildBST(val[i],root);
        }
        inorder(root);
        int ele=2;
       System.out.println();
       System.out.println(searchBST(root, ele).data+" "); 
    }
}
